[
  {
    "objectID": "Section2.html",
    "href": "Section2.html",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "",
    "text": "This practice focuses on how to use the bigDM package to fit the scalable spatial model’s proposals described in Orozco-Acosta et al. (2021) using simulated mortality data from the municipalities of continental Spain."
  },
  {
    "objectID": "Section2.html#the-car_inla-function",
    "href": "Section2.html#the-car_inla-function",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "The CAR_INLA() function",
    "text": "The CAR_INLA() function\nThis function allows fitting (scalable) spatial Poisson mixed models to areal count data, where several conditional autoregressive (CAR) prior distributions can be specified for the spatial random effects.\nSpecifically, the linear predictor is modelled as\n\\[\\begin{equation}\n\\log r_{i} = \\beta_0 + {\\bf x}_{i}^{'}\\mathbf{\\beta} + \\xi_i, \\quad \\mbox{for} \\quad i=1,\\ldots,I\n\\end{equation}\\]\nwhere \\(\\beta_0\\) is a global intercept, \\({\\bf x}_{i}^{'}=(x_{i1},\\ldots,x_{ip})\\) is a \\(p\\)-vector of standardized covariates in the \\(i\\)-th area, \\(\\mathbf{\\beta}=(\\beta_1,\\ldots,\\beta_p)^{'}\\) is the \\(p\\)-vector of fixed effect coefficients, and \\(\\xi_i\\) is a spatially structured random effect with a CAR prior distribution.\n\nMain input arguments\nWhat follows is a brief description of the main input arguments and functionalities of the CAR_INLA() function:\n\ncarto: object of class sf or SpatialPolygonsDataFrame that contains the data of analysis and its associated cartography file. This object must contain at least the target variables of interest specified in the arguments ID.area, O and E.\nID.area: character; name of the variable that contains the IDs of spatial areal units.\nO: character; name of the variable that contains the observed number of disease cases for each areal units.\nE: character; name of the variable that contains either the expected number of disease cases or the population at risk for each areal unit.\nX: a character vector containing the names of the covariates within the carto object to be included in the model as fixed effects, or a matrix object playing the role of the fixed effects design matrix. If X=NULL (default), only a global intercept is included in the model as fixed effect.\nW: optional argument with the binary adjacency matrix of the spatial areal units. If NULL (default), this object is computed from the carto argument (two areas are considered as neighbours if they share a common border).\nprior: one of either \"Leroux\" (default), \"intrinsic\", \"BYM\" or \"BYM2\", which specifies the prior distribution considered for the spatial random effect.\nmodel: one of either \"global\" or \"partition\" (default), which specifies the Global model or one of the scalable model proposal’s (Disjoint model and k-order neighbourhood model, respectively).\nk: numeric value with the neighbourhood order used for the partition model. Usually k=2 or 3 is enough to get good results. If k=0 (default) the Disjoint model is considered. Only required if model=\"partition\".\ncompute.DIC: logical value; if TRUE (default) then approximate values of the Deviance Information Criterion (DIC) and Watanabe-Akaike Information Criterion (WAIC) are computed.\ncompute.fitted.values: logical value (default FALSE); if TRUE transforms the posterior marginal distribution of the linear predictor to the exponential scale (risks or rates).\ninla.mode: one of either \"classic\" (default) or \"compact\", which specifies the approximation method used by INLA. See help(inla) for further details.\n\nFor further details, please refer to the reference manual and the vignettes accompanying this package."
  },
  {
    "objectID": "Section2.html#example-1-stomach-cancer-mortality-data",
    "href": "Section2.html#example-1-stomach-cancer-mortality-data",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "Example 1: stomach cancer mortality data",
    "text": "Example 1: stomach cancer mortality data\nThe main input argument of the CAR_INLA() function must be an object of class sf (simple feature) or SpatialPolygonsDataFrame that contains the data of analysis and its associated cartography file. Standard .shp files (shapefiles) can be loaded as sf objects in R using the sf::st_read() function.\nNote that bigDM includes the Carto_SpainMUN object with the polygons of Spanish municipalities and simulated colorectal cancer mortality data (modified in order to preserve the confidentiality of the original data).\n\nlibrary(bigDM)\nlibrary(INLA)\n\nCargando paquete requerido: Matrix\n\n\nCargando paquete requerido: sp\n\n\nThis is INLA_24.05.10 built 2024-05-10 19:59:04 UTC.\n - See www.r-inla.org/contact-us for how to get help.\n - List available models/likelihoods/etc with inla.list.models()\n - Use inla.doc(&lt;NAME&gt;) to access documentation\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\ndata(\"Carto_SpainMUN\")\nhead(Carto_SpainMUN)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 485318 ymin: 4727428 xmax: 543317 ymax: 4779153\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                                    name           area    perimeter obs\n1 01001                        Alegria-Dulantzi 19913794 [m^2] 34372.11 [m]   2\n2 01002                                 Amurrio 96145595 [m^2] 63352.32 [m]  28\n3 01003                                 Aramaio 73338806 [m^2] 41430.46 [m]   6\n4 01004                              Artziniega 27506468 [m^2] 22605.22 [m]   3\n5 01006                                 Arminon 10559721 [m^2] 17847.35 [m]   0\n6 01008 Arrazua-Ubarrundia (San Martin de Ania) 57502811 [m^2] 64968.81 [m]   2\n         exp       SMR     region                       geometry\n1  3.0237149 0.6614380 Pais Vasco MULTIPOLYGON (((538259 4737...\n2 20.8456682 1.3432047 Pais Vasco MULTIPOLYGON (((503520 4760...\n3  3.7527301 1.5988360 Pais Vasco MULTIPOLYGON (((533286 4759...\n4  3.2093191 0.9347777 Pais Vasco MULTIPOLYGON (((491260 4776...\n5  0.4817391 0.0000000 Pais Vasco MULTIPOLYGON (((509851 4727...\n6  1.9643891 1.0181282 Pais Vasco MULTIPOLYGON (((534678 4746...\n\n\n\nGlobal model\nWe start by fitting the Global model described in Equation (1), where the entire neighbourhood graph of the areal units (municipalities) is considered to define the adjacency matrix \\({\\bf W}\\).\nThe connect_subgraphs() function computes a fully connected graph and its associated adjacency matrix by merging disjoint connected subgraphs through its nearest polygon centroids.\n\n## NOTE: Not necessary (shown for illustrative purposes only)\naux &lt;- connect_subgraphs(Carto_SpainMUN, ID.area=\"ID\")\n\nSearching for isolated areas:\n  1 region(s) with no links\n\nSearching for disjoint connected subgraphs:\n No disjoint connected subgraphs\n\n\nThe function returns a list with the following two elements: * nb: the modified neighbours list * W: associated spatial adjacency matrix of class dgCMatrix\n\nstr(aux,1)\n\nList of 2\n $ nb:List of 7907\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:7907] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language spdep::poly2nb(pl = carto)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ W :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n\nsummary(aux$nb)\n\nNeighbour list object:\nNumber of regions: 7907 \nNumber of nonzero links: 47532 \nPercentage nonzero weights: 0.07602608 \nAverage number of links: 6.011382 \nLink number distribution:\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n  53  169  522 1149 1721 1631 1112  680  378  199  106   60   34   24   18   13 \n  17   18   19   20   21   23   24   25   27   28   31   32   33   34   39 \n  11    2    5    3    4    2    2    2    1    1    1    1    1    1    1 \n53 least connected regions:\n244 256 549 630 637 650 667 715 760 1000 1315 1479 1484 1528 1610 1696 1706 1837 1853 1876 1936 2061 2069 2070 2310 2324 2454 2492 2724 4287 4381 4466 4493 4502 4525 4905 5154 5155 5312 5614 6074 6075 6472 6477 6839 6855 6890 7293 7335 7502 7572 7700 7766 with 1 link\n1 most connected region:\n2196 with 39 links\n\naux$W[1:10,1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names '1', '2', '3' ... ]]\n\n\n                      \n1  . . . . . . . . . 1\n2  . . . . . . . 1 . .\n3  . . . . . . . . . .\n4  . . . . . . . 1 . .\n5  . . . . . . . . . .\n6  . . . . . . . . . .\n7  . . . . . . . . . .\n8  . 1 . 1 . . . . . .\n9  . . . . . . . . . .\n10 1 . . . . . . . . .\n\n\nThe Global model with an iCAR/BYM2 prior distribution are fitted using the CAR_INLA() function as follows:\n\n## Fit the models\niCAR.Global &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                        model=\"global\", prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\nsummary(iCAR.Global)\n\nTime used:\n    Pre = 3.3, Running = 4.5, Post = 1.39, Total = 9.19 \nFixed effects:\n              mean    sd 0.025quant 0.5quant 0.975quant   mode kld\n(Intercept) -0.007 0.006     -0.019   -0.007      0.005 -0.007   0\n\nRandom effects:\n  Name    Model\n    ID.area Besags ICAR model\n\nModel hyperparameters:\n                       mean   sd 0.025quant 0.5quant 0.975quant  mode\nPrecision for ID.area 39.53 5.45      30.18    39.06      51.48 38.17\n\nDeviance Information Criterion (DIC) ...............: 27429.73\nDeviance Information Criterion (DIC, saturated) ....: 8363.46\nEffective number of parameters .....................: 342.12\n\nWatanabe-Akaike information criterion (WAIC) ...: 27430.14\nEffective number of parameters .................: 301.19\n\nMarginal log-Likelihood:  -19904.61 \nCPO, PIT is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n\nBYM2.Global &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                        model=\"global\", prior=\"BYM2\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\nsummary(BYM2.Global)\n\nTime used:\n    Pre = 3.14, Running = 15.3, Post = 2.26, Total = 20.7 \nFixed effects:\n              mean    sd 0.025quant 0.5quant 0.975quant   mode kld\n(Intercept) -0.009 0.006     -0.021   -0.009      0.003 -0.009   0\n\nRandom effects:\n  Name    Model\n    ID.area BYM2 model\n\nModel hyperparameters:\n                        mean    sd 0.025quant 0.5quant 0.975quant   mode\nPrecision for ID.area 73.033 9.618     56.021   72.377     93.825 71.029\nPhi for ID.area        0.831 0.072      0.665    0.841      0.943  0.863\n\nDeviance Information Criterion (DIC) ...............: 27426.29\nDeviance Information Criterion (DIC, saturated) ....: 8360.03\nEffective number of parameters .....................: 376.91\n\nWatanabe-Akaike information criterion (WAIC) ...: 27414.59\nEffective number of parameters .................: 320.52\n\nMarginal log-Likelihood:  -10466.86 \nCPO, PIT is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n\n## Model comparison\ncompare.DIC &lt;- function(x){\n  data.frame(mean.deviance=x$dic$mean.deviance, p.eff=x$dic$p.eff,\n             DIC=x$dic$dic, WAIC=x$waic$waic,\n             time=x$cpu.used[\"Total\"])\n}\ndo.call(rbind,lapply(list(iCAR=iCAR.Global, BYM2=BYM2.Global), compare.DIC))\n\n     mean.deviance    p.eff      DIC     WAIC      time\niCAR      27087.61 342.1213 27429.73 27430.14  9.192083\nBYM2      27049.38 376.9130 27426.30 27414.59 20.674414\n\nplot(iCAR.Global$summary.linear.predictor$`0.5quant`,\n     BYM2.Global$summary.linear.predictor$`0.5quant`,\n     xlim=c(-0.5,0.5), ylim=c(-0.5,0.5),\n     xlab=\"iCAR model\", ylab=\"BYM2 model\",\n     main=\"Posterior median estimates\")\nlines(c(-1,1),c(-1,1))\n\n\n\n\n\n\nPartition models\nA natural choice for defining the partition of the entire spatial domain could be using administrative subdivisions, such as provinces or states. For our example data, the \\(D=15\\) Autonomous Regions of Spain are used as a partition of the \\(n=7907\\) municipalities (Carto_SpainMUN$region variable).\n\ntm_shape(Carto_SpainMUN) +\n  tm_polygons(col=\"region\") + \n  tm_layout(legend.outside=TRUE)\n\n\n\n\nThe disjoint and k-order neighbourhood models with an iCAR prior distribution are fitted using the CAR_INLA() function as:\n\niCAR.k0 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=0, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=0) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k0$cpu.used\n\n Running  Merging    Total \n23.92222 19.30000 43.22222 \n\niCAR.k1 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=1, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=1) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k1$cpu.used\n\n Running  Merging    Total \n24.05402 25.36000 49.41402 \n\niCAR.k2 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=2, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=2) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k2$cpu.used\n\nRunning Merging   Total \n25.7243 24.4600 50.1843 \n\n\nInternally, the divide_carto() function is called to compute the overlapping set of regions \\(\\{D_1,\\ldots,D_{15}\\}\\) according to the grouping variable ID.group=\"region\". The neighbourhood order to add polygons at the border of the spatial subdomains is controlled by the k argument.\n\n## Compute subdomains for k=0,1 and 2\ncarto.k0 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=0)\ncarto.k1 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=1)\ncarto.k2 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=2)\n\n## Plot the spatial polygons for the autonomous region of Castilla y Leon \nplot(carto.k2$`Castilla y Leon`$geometry, col=\"dodgerblue4\", main=\"Castilla y Leon\")\nplot(carto.k1$`Castilla y Leon`$geometry, col=\"dodgerblue\", add=TRUE)\nplot(carto.k0$`Castilla y Leon`$geometry, col=\"lightgrey\", add=TRUE)\n\n\n\n\n\n\nCompare the results\n\nlibrary(RColorBrewer)\n\n## Carto object of the Spanish provinces \ncarto.prov &lt;- aggregate(Carto_SpainMUN[,\"geometry\"],list(ID.group=st_drop_geometry(Carto_SpainMUN)$region), head)\n\n## Model selection criteria\nMODELS &lt;- list(Global=iCAR.Global, k0=iCAR.k0, k1=iCAR.k1, k2=iCAR.k2)\ndo.call(rbind,lapply(MODELS, compare.DIC))\n\n       mean.deviance    p.eff      DIC     WAIC      time\nGlobal      27087.61 342.1213 27429.73 27430.14  9.192083\nk0          27100.21 344.6721 27444.88 27442.07 43.222221\nk1          27096.27 333.7965 27430.06 27431.70 49.414019\nk2          27130.83 306.7090 27437.53 27441.99 50.184301\n\n## Maps with posterior median estimates of log-risks\nCarto_SpainMUN$Global &lt;- iCAR.Global$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k0 &lt;- iCAR.k0$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k1 &lt;- iCAR.k1$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k2 &lt;- iCAR.k2$summary.linear.predictor$`0.5quant`\n\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,log(c(0.83,0.91,0.95,1,1.05,1.10,1.20)),Inf)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nMap.risk &lt;- tm_shape(Carto_SpainMUN) + \n  tm_polygons(col=c(\"Global\",\"k0\",\"k1\",\"k2\"),\n              palette=paleta, border.alpha=0,\n              title=\"Risk\", legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_shape(carto.prov) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior median estimates\", main.title.position=\"center\",\n            panel.labels=c(\"Global model\",\"Disjoint model\",\"1st-order nb\",\"2nd-order nb\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=2, ncol=2)\n\nprint(Map.risk)\n\nVariable(s) \"Global\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\nVariable(s) \"k0\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\nVariable(s) \"k1\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\nVariable(s) \"k2\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n## Maps with posterior exceedence probabilities\nCarto_SpainMUN$Global &lt;- 1-iCAR.Global$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k0 &lt;- 1-iCAR.k0$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k1 &lt;- 1-iCAR.k1$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k2 &lt;- 1-iCAR.k2$summary.linear.predictor$`0cdf`\n\npaleta &lt;- brewer.pal(6,\"Blues\")[-1]\nvalues &lt;- c(0,0.1,0.2,0.8,0.9,1)\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nMap.prob &lt;- tm_shape(Carto_SpainMUN) + \n  tm_polygons(col=c(\"Global\",\"k0\",\"k1\",\"k2\"),\n              palette=paleta, border.alpha=0,\n              title=\"Prob\", legend.show=T, legend.reverse=T,\n              labels=c(\"[0-0.1)\",\"[0.1-0.2)\",\"[0.2-0.8)\",\"[0.8-0.9)\",\"[0.9-1]\")) + \n  tm_shape(carto.prov) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior exceedence probabilities\", main.title.position=\"center\",\n            panel.labels=c(\"Global model\",\"Disjoint model\",\"1st-order nb\",\"2nd-order nb\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=2, ncol=2)\n\nprint(Map.prob)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop on Spatio Temporal Modelling",
    "section": "",
    "text": "The Workshop will consist of a\nAccess to full programme"
  },
  {
    "objectID": "index.html#workshop-on-areal-data",
    "href": "index.html#workshop-on-areal-data",
    "title": "Workshop on Spatio Temporal Modelling",
    "section": "Workshop on Areal data",
    "text": "Workshop on Areal data\n\n\n\nBayesian scalable models to analyze high-dimensional areal data using the bigDM library (slides)\n\n\n\n\nSection 1: Installing bigDM package (Section1.qmd)\n\n\nSection 2: Spatial models for high-dimensional areal data (Section2.qmd)\n\n\nSection 3: Spatial-temporal models for high-dimensional areal data\n\n\nSection 4: Multivariate spatial models for high-dimensional areal data"
  },
  {
    "objectID": "Section1.html",
    "href": "Section1.html",
    "title": "Section 1: Installing the R package bigDM",
    "section": "",
    "text": "The R package bigDM implements several spatial and spatio-temporal scalable disease mapping models for high-dimensional count data using the integrated nested Laplace approximation (INLA) technique for approximate Bayesian inference in latent Gaussian models (Orozco-Acosta et al., 2021; Orozco-Acosta et al., 2023; and Vicente et al., 2023).\n\n\nBefore installing bigDM, ensure that you have the following prerequisites:\n\nR: Make sure you have R installed on your system. You can download and install it from CRAN.\nRStudio (optional): For a better development experience, you might want to use RStudio, which can be downloaded from RStudio’s official website.\nRtools: R version 4.0 and newer for Windows requires Rtools to build R packages containing C, C++, or Fortran code from source. Installing Rtools for Windows\nR-INLA package: Model fitting and inference is fully Bayesian using the well-known INLA technique through the R-INLA package.\nTo install the latest stable version:\n\ninstall.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/stable\"), dep=TRUE) \n\nIMPORTANT NOTES:\n\nAt least the stable version of INLA 22.11.22 (or newer) must be installed for the correct use of the bigDM package.\nVisit the R-INLA website for further details about how to install the package on MacOS and for information on version compatibilities.\n\n\n\n\n\n\nInstall from CRAN\n\ninstall.packages(\"bigDM\", dependencies=TRUE) \n\nInstall from GitHub (development version)\n\n# Install devtools package from CRAN repository\ninstall.packages(\"devtools\")\n\n# Load devtools library\nlibrary(devtools)\n\n# In some Linux OS, it might be necessary to first install the following packages\ninstall.packages(c(\"cpp11\",\"proxy\",\"progress\",\"tzdb\",\"vroom\"))\n\n# Install bigDM from GitHub repository\ninstall_github(\"spatialstatisticsupna/bigDM\")\n\n\n\n\n\nLoad the package and check its documentation:\n\nlibrary(bigDM)\npackageVersion(\"bigDM\")\n\n[1] '0.5.4'\n\nhelp(\"bigDM-package\")\n\nRun a test function:\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(RColorBrewer)\n\n## 1) Load simulated colorectal cancer mortality data \ndata(\"Carto_SpainMUN\")\nstr(Carto_SpainMUN)\n\nClasses 'sf' and 'data.frame':  7907 obs. of  9 variables:\n $ ID       : chr  \"01001\" \"01002\" \"01003\" \"01004\" ...\n $ name     : chr  \"Alegria-Dulantzi\" \"Amurrio\" \"Aramaio\" \"Artziniega\" ...\n $ area     : Units: [m^2] num  19913794 96145595 73338806 27506468 10559721 ...\n $ perimeter: Units: [m] num  34372 63352 41430 22605 17847 ...\n $ obs      : int  2 28 6 3 0 2 5 2 3 2 ...\n $ exp      : num  3.024 20.846 3.753 3.209 0.482 ...\n $ SMR      : num  0.661 1.343 1.599 0.935 0 ...\n $ region   : chr  \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" ...\n $ geometry :sfc_MULTIPOLYGON of length 7907; first list element: List of 2\n  ..$ :List of 1\n  .. ..$ : num [1:16, 1:2] 538259 537564 537255 537085 536961 ...\n  ..$ :List of 1\n  .. ..$ : num [1:37, 1:2] 541230 540800 540369 540107 540191 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:8] \"ID\" \"name\" \"area\" \"perimeter\" ...\n\n## 2) Divide the spatial domain into provinces\ncarto.list &lt;- divide_carto(Carto_SpainMUN, ID.group=\"region\")\ncarto.NAV &lt;- carto.list$Navarra\nhead(carto.NAV)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 569467 ymin: 4641035 xmax: 650989 ymax: 4757037\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                       name           area     perimeter obs       exp\n1 31001                    Abaigar  5001487 [m^2]  9753.257 [m]   0 0.2774141\n2 31002                       &lt;NA&gt; 23128602 [m^2] 29094.768 [m]   3 1.8362324\n3 31003 Abaurregaina/Abaurrea Alta 21415016 [m^2] 31404.991 [m]   0 0.7061570\n4 31004                       &lt;NA&gt; 11023417 [m^2] 33333.132 [m]   0 0.2080274\n5 31005                     Aberin 21087109 [m^2] 25121.171 [m]   1 0.9738344\n6 31006                    Ablitas 77509242 [m^2] 43699.550 [m]   5 6.7425962\n        SMR  region                       geometry\n1 0.0000000 Navarra MULTIPOLYGON (((572068 4721...\n2 1.6337802 Navarra MULTIPOLYGON (((576006.4 47...\n3 0.0000000 Navarra MULTIPOLYGON (((644264 4747...\n4 0.0000000 Navarra MULTIPOLYGON (((643374 4750...\n5 1.0268687 Navarra MULTIPOLYGON (((578396 4720...\n6 0.7415541 Navarra MULTIPOLYGON (((611630 4647...\n\n## 3) Plot a map with the SMRs\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,0.77,0.83,0.91,1,1.10,1.20,1.30,Inf)\n\ntmap_mode(\"view\")\ntm_shape(carto.NAV) + \n  tm_polygons(col=\"SMR\", id=\"name\", palette=paleta,\n              popup.vars=c(\"ID\",\"obs\",\"exp\",\"SMR\"),\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_layout(main.title=\"Colorectal cancer\", main.title.position=\"center\",\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F)"
  },
  {
    "objectID": "Section1.html#manual-for-installing-the-bigdm-package",
    "href": "Section1.html#manual-for-installing-the-bigdm-package",
    "title": "Section 1: Installing the R package bigDM",
    "section": "",
    "text": "The R package bigDM implements several spatial and spatio-temporal scalable disease mapping models for high-dimensional count data using the integrated nested Laplace approximation (INLA) technique for approximate Bayesian inference in latent Gaussian models (Orozco-Acosta et al., 2021; Orozco-Acosta et al., 2023; and Vicente et al., 2023).\n\n\nBefore installing bigDM, ensure that you have the following prerequisites:\n\nR: Make sure you have R installed on your system. You can download and install it from CRAN.\nRStudio (optional): For a better development experience, you might want to use RStudio, which can be downloaded from RStudio’s official website.\nRtools: R version 4.0 and newer for Windows requires Rtools to build R packages containing C, C++, or Fortran code from source. Installing Rtools for Windows\nR-INLA package: Model fitting and inference is fully Bayesian using the well-known INLA technique through the R-INLA package.\nTo install the latest stable version:\n\ninstall.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/stable\"), dep=TRUE) \n\nIMPORTANT NOTES:\n\nAt least the stable version of INLA 22.11.22 (or newer) must be installed for the correct use of the bigDM package.\nVisit the R-INLA website for further details about how to install the package on MacOS and for information on version compatibilities.\n\n\n\n\n\n\nInstall from CRAN\n\ninstall.packages(\"bigDM\", dependencies=TRUE) \n\nInstall from GitHub (development version)\n\n# Install devtools package from CRAN repository\ninstall.packages(\"devtools\")\n\n# Load devtools library\nlibrary(devtools)\n\n# In some Linux OS, it might be necessary to first install the following packages\ninstall.packages(c(\"cpp11\",\"proxy\",\"progress\",\"tzdb\",\"vroom\"))\n\n# Install bigDM from GitHub repository\ninstall_github(\"spatialstatisticsupna/bigDM\")\n\n\n\n\n\nLoad the package and check its documentation:\n\nlibrary(bigDM)\npackageVersion(\"bigDM\")\n\n[1] '0.5.4'\n\nhelp(\"bigDM-package\")\n\nRun a test function:\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(RColorBrewer)\n\n## 1) Load simulated colorectal cancer mortality data \ndata(\"Carto_SpainMUN\")\nstr(Carto_SpainMUN)\n\nClasses 'sf' and 'data.frame':  7907 obs. of  9 variables:\n $ ID       : chr  \"01001\" \"01002\" \"01003\" \"01004\" ...\n $ name     : chr  \"Alegria-Dulantzi\" \"Amurrio\" \"Aramaio\" \"Artziniega\" ...\n $ area     : Units: [m^2] num  19913794 96145595 73338806 27506468 10559721 ...\n $ perimeter: Units: [m] num  34372 63352 41430 22605 17847 ...\n $ obs      : int  2 28 6 3 0 2 5 2 3 2 ...\n $ exp      : num  3.024 20.846 3.753 3.209 0.482 ...\n $ SMR      : num  0.661 1.343 1.599 0.935 0 ...\n $ region   : chr  \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" ...\n $ geometry :sfc_MULTIPOLYGON of length 7907; first list element: List of 2\n  ..$ :List of 1\n  .. ..$ : num [1:16, 1:2] 538259 537564 537255 537085 536961 ...\n  ..$ :List of 1\n  .. ..$ : num [1:37, 1:2] 541230 540800 540369 540107 540191 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:8] \"ID\" \"name\" \"area\" \"perimeter\" ...\n\n## 2) Divide the spatial domain into provinces\ncarto.list &lt;- divide_carto(Carto_SpainMUN, ID.group=\"region\")\ncarto.NAV &lt;- carto.list$Navarra\nhead(carto.NAV)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 569467 ymin: 4641035 xmax: 650989 ymax: 4757037\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                       name           area     perimeter obs       exp\n1 31001                    Abaigar  5001487 [m^2]  9753.257 [m]   0 0.2774141\n2 31002                       &lt;NA&gt; 23128602 [m^2] 29094.768 [m]   3 1.8362324\n3 31003 Abaurregaina/Abaurrea Alta 21415016 [m^2] 31404.991 [m]   0 0.7061570\n4 31004                       &lt;NA&gt; 11023417 [m^2] 33333.132 [m]   0 0.2080274\n5 31005                     Aberin 21087109 [m^2] 25121.171 [m]   1 0.9738344\n6 31006                    Ablitas 77509242 [m^2] 43699.550 [m]   5 6.7425962\n        SMR  region                       geometry\n1 0.0000000 Navarra MULTIPOLYGON (((572068 4721...\n2 1.6337802 Navarra MULTIPOLYGON (((576006.4 47...\n3 0.0000000 Navarra MULTIPOLYGON (((644264 4747...\n4 0.0000000 Navarra MULTIPOLYGON (((643374 4750...\n5 1.0268687 Navarra MULTIPOLYGON (((578396 4720...\n6 0.7415541 Navarra MULTIPOLYGON (((611630 4647...\n\n## 3) Plot a map with the SMRs\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,0.77,0.83,0.91,1,1.10,1.20,1.30,Inf)\n\ntmap_mode(\"view\")\ntm_shape(carto.NAV) + \n  tm_polygons(col=\"SMR\", id=\"name\", palette=paleta,\n              popup.vars=c(\"ID\",\"obs\",\"exp\",\"SMR\"),\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_layout(main.title=\"Colorectal cancer\", main.title.position=\"center\",\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F)"
  }
]