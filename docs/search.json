[
  {
    "objectID": "Section4.html",
    "href": "Section4.html",
    "title": "Section 4: Spatio-temporal CAR models for spatial disease mapping",
    "section": "",
    "text": "Description"
  },
  {
    "objectID": "Section2.html",
    "href": "Section2.html",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "",
    "text": "This practice focuses on how to use the bigDM package to fit the scalable spatial model’s proposals described in Orozco-Acosta et al. (2021) using simulated mortality data from the municipalities of continental Spain."
  },
  {
    "objectID": "Section2.html#the-car_inla-function",
    "href": "Section2.html#the-car_inla-function",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "The CAR_INLA() function",
    "text": "The CAR_INLA() function\nThis function allows fitting (scalable) spatial Poisson mixed models to areal count data, where several conditional autoregressive (CAR) prior distributions can be specified for the spatial random effects.\nSpecifically, the linear predictor is modelled as\n\\[\\begin{equation}\n\\log r_{i} = \\beta_0 + {\\bf x}_{i}^{'}\\mathbf{\\beta} + \\xi_i, \\quad \\mbox{for} \\quad i=1,\\ldots,I\n\\end{equation}\\]\nwhere \\(\\beta_0\\) is a global intercept, \\({\\bf x}_{i}^{'}=(x_{i1},\\ldots,x_{ip})\\) is a \\(p\\)-vector of standardized covariates in the \\(i\\)-th area, \\(\\mathbf{\\beta}=(\\beta_1,\\ldots,\\beta_p)^{'}\\) is the \\(p\\)-vector of fixed effect coefficients, and \\(\\xi_i\\) is a spatially structured random effect with a CAR prior distribution.\n\nMain input arguments\nWhat follows is a brief description of the main input arguments and functionalities of the CAR_INLA() function:\n\ncarto: object of class sf or SpatialPolygonsDataFrame that contains the data of analysis and its associated cartography file. This object must contain at least the target variables of interest specified in the arguments ID.area, O and E.\nID.area: character; name of the variable that contains the IDs of spatial areal units.\nID.group: character; name of the variable that contains the IDs of the spatial partition (grouping variable). Only required if model=\"partition\".\nO: character; name of the variable that contains the observed number of disease cases for each areal units.\nE: character; name of the variable that contains either the expected number of disease cases or the population at risk for each areal unit.\nX: a character vector containing the names of the covariates within the carto object to be included in the model as fixed effects, or a matrix object playing the role of the fixed effects design matrix. If X=NULL (default), only a global intercept is included in the model as fixed effect.\nW: optional argument with the binary adjacency matrix of the spatial areal units. If NULL (default), this object is computed from the carto argument (two areas are considered as neighbours if they share a common border).\nprior: one of either \"Leroux\" (default), \"intrinsic\", \"BYM\" or \"BYM2\", which specifies the prior distribution considered for the spatial random effect.\nmodel: one of either \"global\" or \"partition\" (default), which specifies the Global model or one of the scalable model proposal’s (Disjoint model and k-order neighbourhood model, respectively).\nk: numeric value with the neighbourhood order used for the partition model. Usually k=2 or 3 is enough to get good results. If k=0 (default) the Disjoint model is considered. Only required if model=\"partition\".\ncompute.DIC: logical value; if TRUE (default) then approximate values of the Deviance Information Criterion (DIC) and Watanabe-Akaike Information Criterion (WAIC) are computed.\ncompute.fitted.values: logical value (default FALSE); if TRUE transforms the posterior marginal distribution of the linear predictor to the exponential scale (risks or rates).\ninla.mode: one of either \"classic\" (default) or \"compact\", which specifies the approximation method used by INLA. See help(inla) for further details.\n\nFor further details, please refer to the reference manual and the vignettes accompanying this package."
  },
  {
    "objectID": "Section2.html#example-1-stomach-cancer-mortality-data",
    "href": "Section2.html#example-1-stomach-cancer-mortality-data",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "Example 1: stomach cancer mortality data",
    "text": "Example 1: stomach cancer mortality data\nThe main input argument of the CAR_INLA() function must be an object of class sf (simple feature) or SpatialPolygonsDataFrame that contains the data of analysis and its associated cartography file. Standard .shp files (shapefiles) can be loaded as sf objects in R using the sf::st_read() function.\nNote that bigDM includes the Carto_SpainMUN object with the polygons of Spanish municipalities and simulated colorectal cancer mortality data (modified in order to preserve the confidentiality of the original data).\n\nlibrary(bigDM)\nlibrary(INLA)\n\nCargando paquete requerido: Matrix\n\n\nCargando paquete requerido: sp\n\n\nThis is INLA_24.05.10 built 2024-05-10 19:59:04 UTC.\n - See www.r-inla.org/contact-us for how to get help.\n - List available models/likelihoods/etc with inla.list.models()\n - Use inla.doc(&lt;NAME&gt;) to access documentation\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\ndata(\"Carto_SpainMUN\")\nhead(Carto_SpainMUN)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 485318 ymin: 4727428 xmax: 543317 ymax: 4779153\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                                    name           area    perimeter obs\n1 01001                        Alegria-Dulantzi 19913794 [m^2] 34372.11 [m]   2\n2 01002                                 Amurrio 96145595 [m^2] 63352.32 [m]  28\n3 01003                                 Aramaio 73338806 [m^2] 41430.46 [m]   6\n4 01004                              Artziniega 27506468 [m^2] 22605.22 [m]   3\n5 01006                                 Arminon 10559721 [m^2] 17847.35 [m]   0\n6 01008 Arrazua-Ubarrundia (San Martin de Ania) 57502811 [m^2] 64968.81 [m]   2\n         exp       SMR     region                       geometry\n1  3.0237149 0.6614380 Pais Vasco MULTIPOLYGON (((538259 4737...\n2 20.8456682 1.3432047 Pais Vasco MULTIPOLYGON (((503520 4760...\n3  3.7527301 1.5988360 Pais Vasco MULTIPOLYGON (((533286 4759...\n4  3.2093191 0.9347777 Pais Vasco MULTIPOLYGON (((491260 4776...\n5  0.4817391 0.0000000 Pais Vasco MULTIPOLYGON (((509851 4727...\n6  1.9643891 1.0181282 Pais Vasco MULTIPOLYGON (((534678 4746...\n\n\n\nGlobal model\nWe start by fitting the Global model described in Equation (1), where the entire neighbourhood graph of the areal units (municipalities) is considered to define the adjacency matrix \\({\\bf W}\\).\nThe connect_subgraphs() function computes a fully connected graph and its associated adjacency matrix by merging disjoint connected subgraphs through its nearest polygon centroids.\n\n## NOTE: Not necessary (shown for illustrative purposes only)\naux &lt;- connect_subgraphs(Carto_SpainMUN, ID.area=\"ID\")\n\nSearching for isolated areas:\n  1 region(s) with no links\n\nSearching for disjoint connected subgraphs:\n No disjoint connected subgraphs\n\n\nThe function returns a list with the following two elements: * nb: the modified neighbours list * W: associated spatial adjacency matrix of class dgCMatrix\n\nstr(aux,1)\n\nList of 2\n $ nb:List of 7907\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:7907] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language spdep::poly2nb(pl = carto)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ W :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n\nsummary(aux$nb)\n\nNeighbour list object:\nNumber of regions: 7907 \nNumber of nonzero links: 47532 \nPercentage nonzero weights: 0.07602608 \nAverage number of links: 6.011382 \nLink number distribution:\n\n   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 \n  53  169  522 1149 1721 1631 1112  680  378  199  106   60   34   24   18   13 \n  17   18   19   20   21   23   24   25   27   28   31   32   33   34   39 \n  11    2    5    3    4    2    2    2    1    1    1    1    1    1    1 \n53 least connected regions:\n244 256 549 630 637 650 667 715 760 1000 1315 1479 1484 1528 1610 1696 1706 1837 1853 1876 1936 2061 2069 2070 2310 2324 2454 2492 2724 4287 4381 4466 4493 4502 4525 4905 5154 5155 5312 5614 6074 6075 6472 6477 6839 6855 6890 7293 7335 7502 7572 7700 7766 with 1 link\n1 most connected region:\n2196 with 39 links\n\naux$W[1:10,1:10]\n\n10 x 10 sparse Matrix of class \"dgCMatrix\"\n\n\n  [[ suppressing 10 column names '1', '2', '3' ... ]]\n\n\n                      \n1  . . . . . . . . . 1\n2  . . . . . . . 1 . .\n3  . . . . . . . . . .\n4  . . . . . . . 1 . .\n5  . . . . . . . . . .\n6  . . . . . . . . . .\n7  . . . . . . . . . .\n8  . 1 . 1 . . . . . .\n9  . . . . . . . . . .\n10 1 . . . . . . . . .\n\n\nThe Global model with an iCAR/BYM2 prior distribution are fitted using the CAR_INLA() function as follows:\n\n## Fit the models\niCAR.Global &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                        model=\"global\", prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\nsummary(iCAR.Global)\n\nTime used:\n    Pre = 3.43, Running = 4.79, Post = 1.51, Total = 9.72 \nFixed effects:\n              mean    sd 0.025quant 0.5quant 0.975quant   mode kld\n(Intercept) -0.007 0.006     -0.019   -0.007      0.005 -0.007   0\n\nRandom effects:\n  Name    Model\n    ID.area Besags ICAR model\n\nModel hyperparameters:\n                       mean   sd 0.025quant 0.5quant 0.975quant  mode\nPrecision for ID.area 39.53 5.45      30.18    39.06      51.48 38.17\n\nDeviance Information Criterion (DIC) ...............: 27429.73\nDeviance Information Criterion (DIC, saturated) ....: 8363.46\nEffective number of parameters .....................: 342.12\n\nWatanabe-Akaike information criterion (WAIC) ...: 27430.14\nEffective number of parameters .................: 301.19\n\nMarginal log-Likelihood:  -19904.61 \nCPO, PIT is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n\nBYM2.Global &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                        model=\"global\", prior=\"BYM2\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\nsummary(BYM2.Global)\n\nTime used:\n    Pre = 3.26, Running = 16.3, Post = 2.27, Total = 21.9 \nFixed effects:\n              mean    sd 0.025quant 0.5quant 0.975quant   mode kld\n(Intercept) -0.009 0.006     -0.021   -0.009      0.003 -0.009   0\n\nRandom effects:\n  Name    Model\n    ID.area BYM2 model\n\nModel hyperparameters:\n                        mean    sd 0.025quant 0.5quant 0.975quant   mode\nPrecision for ID.area 73.033 9.618     56.021   72.377     93.825 71.029\nPhi for ID.area        0.831 0.072      0.665    0.841      0.943  0.863\n\nDeviance Information Criterion (DIC) ...............: 27426.29\nDeviance Information Criterion (DIC, saturated) ....: 8360.03\nEffective number of parameters .....................: 376.91\n\nWatanabe-Akaike information criterion (WAIC) ...: 27414.59\nEffective number of parameters .................: 320.52\n\nMarginal log-Likelihood:  -10466.86 \nCPO, PIT is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n\n## Model comparison\ncompare.DIC &lt;- function(x){\n  data.frame(mean.deviance=x$dic$mean.deviance, p.eff=x$dic$p.eff,\n             DIC=x$dic$dic, WAIC=x$waic$waic,\n             time=x$cpu.used[\"Total\"])\n}\ndo.call(rbind,lapply(list(iCAR=iCAR.Global, BYM2=BYM2.Global), compare.DIC))\n\n     mean.deviance    p.eff      DIC     WAIC     time\niCAR      27087.61 342.1213 27429.73 27430.14  9.72430\nBYM2      27049.38 376.9136 27426.30 27414.59 21.85606\n\nplot(iCAR.Global$summary.linear.predictor$`0.5quant`,\n     BYM2.Global$summary.linear.predictor$`0.5quant`,\n     xlim=c(-0.5,0.5), ylim=c(-0.5,0.5),\n     xlab=\"iCAR model\", ylab=\"BYM2 model\",\n     main=\"Posterior median estimates\")\nlines(c(-1,1),c(-1,1))\n\n\n\n\n\n\nPartition models\nA natural choice for defining the partition of the entire spatial domain could be using administrative subdivisions, such as provinces or states. For our example data, the \\(D=15\\) Autonomous Regions of Spain are used as a partition of the \\(n=7907\\) municipalities (Carto_SpainMUN$region variable).\n\ntm_shape(Carto_SpainMUN) +\n  tm_polygons(col=\"region\") + \n  tm_layout(legend.outside=TRUE)\n\n\n\n\nThe disjoint and k-order neighbourhood models with an iCAR prior distribution are fitted using the CAR_INLA() function as:\n\niCAR.k0 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=0, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=0) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k0$cpu.used\n\nRunning Merging   Total \n23.3122 20.3300 43.6422 \n\niCAR.k1 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=1, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=1) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k1$cpu.used\n\n Running  Merging    Total \n24.86217 26.62000 51.48217 \n\niCAR.k2 &lt;- CAR_INLA(carto=Carto_SpainMUN, ID.area=\"ID\", O=\"obs\", E=\"exp\",\n                    model=\"partition\", k=2, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=2) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k2$cpu.used\n\n Running  Merging    Total \n27.70108 26.30000 54.00108 \n\n\nInternally, the divide_carto() function is called to compute the overlapping set of regions \\(\\{D_1,\\ldots,D_{15}\\}\\) according to the grouping variable ID.group=\"region\". The neighbourhood order to add polygons at the border of the spatial subdomains is controlled by the k argument.\n\n## Compute subdomains for k=0,1 and 2\ncarto.k0 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=0)\ncarto.k1 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=1)\ncarto.k2 &lt;- divide_carto(carto=Carto_SpainMUN, ID.group=\"region\", k=2)\n\n## Plot the spatial polygons for the autonomous region of Castilla y Leon \nplot(carto.k2$`Castilla y Leon`$geometry, col=\"dodgerblue4\", main=\"Castilla y Leon\")\nplot(carto.k1$`Castilla y Leon`$geometry, col=\"dodgerblue\", add=TRUE)\nplot(carto.k0$`Castilla y Leon`$geometry, col=\"lightgrey\", add=TRUE)\n\n\n\n\n\n\nCompare the results\n\nlibrary(RColorBrewer)\n\n## Carto object of the Spanish provinces \ncarto.CCAA &lt;- aggregate(Carto_SpainMUN[,\"geometry\"],list(ID.group=st_drop_geometry(Carto_SpainMUN)$region), head)\n\n## Model selection criteria\nMODELS &lt;- list(Global=iCAR.Global, k0=iCAR.k0, k1=iCAR.k1, k2=iCAR.k2)\ndo.call(rbind,lapply(MODELS, compare.DIC))\n\n       mean.deviance    p.eff      DIC     WAIC     time\nGlobal      27087.61 342.1213 27429.73 27430.14  9.72430\nk0          27100.06 344.7219 27444.78 27443.66 43.64220\nk1          27098.41 333.2340 27431.64 27432.21 51.48217\nk2          27131.06 307.4862 27438.54 27442.80 54.00108\n\n## Maps with posterior median estimates of log-risks\nCarto_SpainMUN$Global &lt;- iCAR.Global$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k0 &lt;- iCAR.k0$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k1 &lt;- iCAR.k1$summary.linear.predictor$`0.5quant`\nCarto_SpainMUN$k2 &lt;- iCAR.k2$summary.linear.predictor$`0.5quant`\n\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,log(c(0.83,0.91,0.95,1,1.05,1.10,1.20)),Inf)\n\ntmap_mode(\"plot\")\nMap.risk &lt;- tm_shape(Carto_SpainMUN) + \n  tm_polygons(col=c(\"Global\",\"k0\",\"k1\",\"k2\"), palette=paleta, border.alpha=0,\n              title=\"log-risks\", legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_shape(carto.CCAA) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior median estimates\", main.title.position=\"center\",\n            panel.labels=c(\"Global model\",\"Disjoint model\",\"1st-order nb\",\"2nd-order nb\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=2, ncol=2)\n\nprint(Map.risk)\n\n\n\n## Maps with posterior exceedence probabilities\nCarto_SpainMUN$Global &lt;- 1-iCAR.Global$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k0 &lt;- 1-iCAR.k0$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k1 &lt;- 1-iCAR.k1$summary.linear.predictor$`0cdf`\nCarto_SpainMUN$k2 &lt;- 1-iCAR.k2$summary.linear.predictor$`0cdf`\n\npaleta &lt;- brewer.pal(6,\"Blues\")[-1]\nvalues &lt;- c(0,0.1,0.2,0.8,0.9,1)\n\ntmap_mode(\"plot\")\nMap.prob &lt;- tm_shape(Carto_SpainMUN) + \n  tm_polygons(col=c(\"Global\",\"k0\",\"k1\",\"k2\"), palette=paleta, border.alpha=0,\n              title=\"Prob\", legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\",\n              labels=c(\"[0-0.1)\",\"[0.1-0.2)\",\"[0.2-0.8)\",\"[0.8-0.9)\",\"[0.9-1]\")) + \n  tm_shape(carto.CCAA) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior exceedence probabilities\", main.title.position=\"center\",\n            panel.labels=c(\"Global model\",\"Disjoint model\",\"1st-order nb\",\"2nd-order nb\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=2, ncol=2)\n\nprint(Map.prob)"
  },
  {
    "objectID": "Section2.html#example-2-ecological-regression-model",
    "href": "Section2.html#example-2-ecological-regression-model",
    "title": "Section 2: CAR models for spatial disease mapping",
    "section": "Example 2: ecological regression model",
    "text": "Example 2: ecological regression model\nIn this second example, we are going to fit a spatial model that incorporates both area-level CAR random effects and a set of explanatory variables, with the aim of comparing the regression coefficient estimates obtained from the global and partitioned models.\nFor this, we will use the data contained in the Data_MultiCancer object as follows:\n\n## Define the data and the spatial covariates ##\ndata(\"Data_MultiCancer\")\nhead(Data_MultiCancer)\n\n     ID disease obs        exp       SMR\n1 01001       1   3  6.6147794 0.4535299\n2 01002       1  41 42.6337564 0.9616793\n3 01003       1   4  7.4307781 0.5383016\n4 01004       1   6  6.3549654 0.9441436\n5 01006       1   0  0.9337634 0.0000000\n6 01008       1   2  3.9404795 0.5075524\n\ndata &lt;- Data_MultiCancer[Data_MultiCancer$disease==1,]\ndata$X1 &lt;- Data_MultiCancer[Data_MultiCancer$disease==2,\"SMR\"]\ndata$X2 &lt;- Data_MultiCancer[Data_MultiCancer$disease==3,\"SMR\"]\nhead(data)\n\n     ID disease obs        exp       SMR        X1        X2\n1 01001       1   3  6.6147794 0.4535299 1.3051895 0.7755112\n2 01002       1  41 42.6337564 0.9616793 1.5158172 0.7053982\n3 01003       1   4  7.4307781 0.5383016 1.0527138 1.3203218\n4 01004       1   6  6.3549654 0.9441436 0.6153434 0.7681720\n5 01006       1   0  0.9337634 0.0000000 0.0000000 0.0000000\n6 01008       1   2  3.9404795 0.5075524 0.0000000 1.2496763\n\n## Define the sf object ##\nCarto_SpainMUN$obs &lt;- NULL\nCarto_SpainMUN$exp &lt;- NULL\nCarto_SpainMUN$SMR &lt;- NULL\n\ncarto &lt;- merge(Carto_SpainMUN,data,by=\"ID\")\nhead(carto)\n\nSimple feature collection with 6 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 485318 ymin: 4727428 xmax: 543317 ymax: 4779153\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                                    name           area    perimeter\n1 01001                        Alegria-Dulantzi 19913794 [m^2] 34372.11 [m]\n2 01002                                 Amurrio 96145595 [m^2] 63352.32 [m]\n3 01003                                 Aramaio 73338806 [m^2] 41430.46 [m]\n4 01004                              Artziniega 27506468 [m^2] 22605.22 [m]\n5 01006                                 Arminon 10559721 [m^2] 17847.35 [m]\n6 01008 Arrazua-Ubarrundia (San Martin de Ania) 57502811 [m^2] 64968.81 [m]\n      region    Global        k0        k1        k2 disease obs        exp\n1 Pais Vasco 0.6978445 0.6703088 0.7527308 0.7508028       1   3  6.6147794\n2 Pais Vasco 0.8803894 0.8694077 0.8576663 0.8654468       1  41 42.6337564\n3 Pais Vasco 0.8397482 0.8311717 0.8486364 0.8489246       1   4  7.4307781\n4 Pais Vasco 0.7516240 0.7511987 0.7720013 0.7331037       1   6  6.3549654\n5 Pais Vasco 0.6473510 0.6001158 0.6230463 0.6358718       1   0  0.9337634\n6 Pais Vasco 0.7165259 0.7041837 0.7359355 0.7344448       1   2  3.9404795\n        SMR        X1        X2                       geometry\n1 0.4535299 1.3051895 0.7755112 MULTIPOLYGON (((538259 4737...\n2 0.9616793 1.5158172 0.7053982 MULTIPOLYGON (((503520 4760...\n3 0.5383016 1.0527138 1.3203218 MULTIPOLYGON (((533286 4759...\n4 0.9441436 0.6153434 0.7681720 MULTIPOLYGON (((491260 4776...\n5 0.0000000 0.0000000 0.0000000 MULTIPOLYGON (((509851 4727...\n6 0.5075524 0.0000000 1.2496763 MULTIPOLYGON (((534678 4746...\n\n\nA character vector with the covariate names or the design matrix of the fixed effects can be included through the X=... argument of the CAR_INLA() function:\n\niCAR.Global &lt;- CAR_INLA(carto=carto, ID.area=\"ID\",\n                        O=\"obs\", E=\"exp\", X=c(\"X1\",\"X2\"),\n                        model=\"global\", prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\niCAR.k1 &lt;- CAR_INLA(carto=carto, ID.area=\"ID\",\n                    O=\"obs\", E=\"exp\", X=c(\"X1\",\"X2\"),\n                    model=\"partition\", k=1, ID.group=\"region\",\n                    prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=1) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\n\n\nLocal and global estimates of the fixed effects\nSummary statistics of the posterior marginal estimates for the global model’s fixed effects:\n\niCAR.Global$summary.fixed\n\n                    mean          sd   0.025quant     0.5quant  0.975quant\n(Intercept) -0.143431121 0.006025473 -0.155278873 -0.143419614 -0.13164882\nX1           0.021959574 0.009970845  0.002396736  0.021963389  0.04150069\nX2           0.001719766 0.010214449 -0.018316430  0.001722059  0.02174290\n                    mode          kld\n(Intercept) -0.143419534 1.017709e-09\nX1           0.021963408 8.770430e-11\nX2           0.001722071 6.288758e-11\n\n\nIn partition models, local estimates of the fixed effects coefficients are obtained in each province:\n\nx1 &lt;- grep(\"^X1\",rownames(iCAR.k1$summary.fixed.partition))\nhead(iCAR.k1$summary.fixed.partition[x1,])\n\n              mean         sd    0.025quant     0.5quant 0.975quant        mode\nX1.01  0.035030880 0.03127741 -0.0265000457  0.035098908 0.09617459  0.03509924\nX1.02  0.062384460 0.03188713 -0.0001847686  0.062397567 0.12487918  0.06239766\nX1.03 -0.147491392 0.08699742 -0.3208914664 -0.146539392 0.02048611 -0.14653764\nX1.04 -0.039189398 0.07361260 -0.1841407098 -0.039029499 0.10483569 -0.03903387\nX1.05  0.010311903 0.02926385 -0.0471797744  0.010348424 0.06759555  0.01034856\nX1.06 -0.001755338 0.01857518 -0.0381982595 -0.001749028 0.03465168 -0.00174899\n               kld\nX1.01 1.221077e-09\nX1.02 5.736801e-11\nX1.03 3.005854e-08\nX1.04 2.905260e-09\nX1.05 4.148953e-10\nX1.06 6.800801e-11\n\nx2 &lt;- grep(\"^X2\",rownames(iCAR.k1$summary.fixed.partition))\nhead(iCAR.k1$summary.fixed.partition[x2,])\n\n              mean         sd  0.025quant     0.5quant  0.975quant         mode\nX2.01  0.007483662 0.03192414 -0.05517454  0.007502554 0.070034332  0.007502651\nX2.02 -0.063209201 0.03579666 -0.13345289 -0.063193310 0.006943975 -0.063193248\nX2.03  0.063872615 0.07846803 -0.09169416  0.064418340 0.216323431  0.064416065\nX2.04 -0.081429751 0.08111565 -0.24071885 -0.081386609 0.077617646 -0.081385473\nX2.05 -0.006772546 0.02773751 -0.06123464 -0.006748671 0.047553712 -0.006748531\nX2.06  0.007999922 0.01719930 -0.02572534  0.007999391 0.041728210  0.007999390\n               kld\nX2.01 1.049015e-10\nX2.02 6.659649e-11\nX2.03 1.324993e-08\nX2.04 7.817714e-10\nX2.05 2.057702e-10\nX2.06 4.168722e-11\n\n## Maps with posterior median estimates at each province\ncarto.CCAA &lt;- aggregate(Carto_SpainMUN[,\"geometry\"],list(ID.group=st_drop_geometry(Carto_SpainMUN)$region), head)\n\ncarto.CCAA$X1 &lt;- iCAR.k1$summary.fixed.partition$`0.5quant`[x1]\ncarto.CCAA$X2 &lt;- iCAR.k1$summary.fixed.partition$`0.5quant`[x2]\n\npaleta &lt;- c(brewer.pal(3,\"Reds\")[3:2],brewer.pal(5,\"Blues\")[-1])\nvalues &lt;- seq(-0.2,0.4,0.1)\n\ntm_shape(carto.CCAA) + \n  tm_polygons(col=c(\"X1\",\"X2\"), palette=paleta,\n              title=\"\", legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_layout(main.title=\"Posterior median estimates\", main.title.position=\"center\",\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            panel.labels=c(\"X1 covariate\",\"X2 covariate\"),\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=1, ncol=2)\n\n\n\n\nGlobal estimates can be also computed by combining the marginal estimates in each partition by applying the CMC algorithm:\n\nrbind(Global=iCAR.Global$summary.fixed[\"X1\",1:5],\n      `k1-CMC`=iCAR.k1$summary.fixed[\"X1\",1:5])\n\n             mean          sd   0.025quant   0.5quant 0.975quant\nGlobal 0.02195957 0.009970845 0.0023967359 0.02196339 0.04150069\nk1-CMC 0.01885740 0.009481415 0.0002116623 0.01886906 0.03759546\n\nrbind(Global=iCAR.Global$summary.fixed[\"X2\",1:5],\n      `k1-CMC`=iCAR.k1$summary.fixed[\"X2\",1:5])\n\n               mean         sd  0.025quant     0.5quant 0.975quant\nGlobal  0.001719766 0.01021445 -0.01831643  0.001722059 0.02174290\nk1-CMC -0.005810073 0.00971289 -0.02501863 -0.005874933 0.01318879"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop on Spatio Temporal Modelling",
    "section": "",
    "text": "The Workshop will consist of a\nAccess to full programme"
  },
  {
    "objectID": "index.html#workshop-on-areal-data",
    "href": "index.html#workshop-on-areal-data",
    "title": "Workshop on Spatio Temporal Modelling",
    "section": "Workshop on Areal data",
    "text": "Workshop on Areal data\n\n\n\nBayesian scalable models to analyze high-dimensional areal data using the bigDM library (slides)\n\n\n\n\nSection 1: Installing bigDM package (Section1.qmd)\n\n\nSection 2: Spatial models for high-dimensional areal data (Section2.qmd)\n\n\nSection 3: Multivariate spatial models for high-dimensional areal data (Section3.qmd)\n\n\nSection 4: Spatial-temporal models for high-dimensional areal data (Section4.qmd)"
  },
  {
    "objectID": "Section1.html",
    "href": "Section1.html",
    "title": "Section 1: Installing the R package bigDM",
    "section": "",
    "text": "The R package bigDM implements several spatial and spatio-temporal scalable disease mapping models for high-dimensional count data using the integrated nested Laplace approximation (INLA) technique for approximate Bayesian inference in latent Gaussian models (Orozco-Acosta et al., 2021; Orozco-Acosta et al., 2023; and Vicente et al., 2023).\n\n\nBefore installing bigDM, ensure that you have the following prerequisites:\n\nR: Make sure you have R installed on your system. You can download and install it from CRAN.\nRStudio (optional): For a better development experience, you might want to use RStudio, which can be downloaded from RStudio’s official website.\nRtools: R version 4.0 and newer for Windows requires Rtools to build R packages containing C, C++, or Fortran code from source. Installing Rtools for Windows\nR-INLA package: Model fitting and inference is fully Bayesian using the well-known INLA technique through the R-INLA package.\nTo install the latest stable version:\n\ninstall.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/stable\"), dep=TRUE) \n\nIMPORTANT NOTES:\n\nAt least the stable version of INLA 22.11.22 (or newer) must be installed for the correct use of the bigDM package.\nVisit the R-INLA website for further details about how to install the package on MacOS and for information on version compatibilities.\n\n\n\n\n\n\nInstall from CRAN\n\ninstall.packages(\"bigDM\", dependencies=TRUE) \n\nInstall from GitHub (development version)\n\n# Install devtools package from CRAN repository\ninstall.packages(\"devtools\")\n\n# Load devtools library\nlibrary(devtools)\n\n# In some Linux OS, it might be necessary to first install the following packages\ninstall.packages(c(\"cpp11\",\"proxy\",\"progress\",\"tzdb\",\"vroom\"))\n\n# Install bigDM from GitHub repository\ninstall_github(\"spatialstatisticsupna/bigDM\")\n\n\n\n\n\nLoad the package and check its documentation:\n\nlibrary(bigDM)\npackageVersion(\"bigDM\")\n\n[1] '0.5.4'\n\nhelp(\"bigDM-package\")\n\nRun a test function:\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(RColorBrewer)\n\n## 1) Load simulated colorectal cancer mortality data \ndata(\"Carto_SpainMUN\")\nstr(Carto_SpainMUN)\n\nClasses 'sf' and 'data.frame':  7907 obs. of  9 variables:\n $ ID       : chr  \"01001\" \"01002\" \"01003\" \"01004\" ...\n $ name     : chr  \"Alegria-Dulantzi\" \"Amurrio\" \"Aramaio\" \"Artziniega\" ...\n $ area     : Units: [m^2] num  19913794 96145595 73338806 27506468 10559721 ...\n $ perimeter: Units: [m] num  34372 63352 41430 22605 17847 ...\n $ obs      : int  2 28 6 3 0 2 5 2 3 2 ...\n $ exp      : num  3.024 20.846 3.753 3.209 0.482 ...\n $ SMR      : num  0.661 1.343 1.599 0.935 0 ...\n $ region   : chr  \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" ...\n $ geometry :sfc_MULTIPOLYGON of length 7907; first list element: List of 2\n  ..$ :List of 1\n  .. ..$ : num [1:16, 1:2] 538259 537564 537255 537085 536961 ...\n  ..$ :List of 1\n  .. ..$ : num [1:37, 1:2] 541230 540800 540369 540107 540191 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:8] \"ID\" \"name\" \"area\" \"perimeter\" ...\n\n## 2) Divide the spatial domain into provinces\ncarto.list &lt;- divide_carto(Carto_SpainMUN, ID.group=\"region\")\ncarto.NAV &lt;- carto.list$Navarra\nhead(carto.NAV)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 569467 ymin: 4641035 xmax: 650989 ymax: 4757037\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                       name           area     perimeter obs       exp\n1 31001                    Abaigar  5001487 [m^2]  9753.257 [m]   0 0.2774141\n2 31002                       &lt;NA&gt; 23128602 [m^2] 29094.768 [m]   3 1.8362324\n3 31003 Abaurregaina/Abaurrea Alta 21415016 [m^2] 31404.991 [m]   0 0.7061570\n4 31004                       &lt;NA&gt; 11023417 [m^2] 33333.132 [m]   0 0.2080274\n5 31005                     Aberin 21087109 [m^2] 25121.171 [m]   1 0.9738344\n6 31006                    Ablitas 77509242 [m^2] 43699.550 [m]   5 6.7425962\n        SMR  region                       geometry\n1 0.0000000 Navarra MULTIPOLYGON (((572068 4721...\n2 1.6337802 Navarra MULTIPOLYGON (((576006.4 47...\n3 0.0000000 Navarra MULTIPOLYGON (((644264 4747...\n4 0.0000000 Navarra MULTIPOLYGON (((643374 4750...\n5 1.0268687 Navarra MULTIPOLYGON (((578396 4720...\n6 0.7415541 Navarra MULTIPOLYGON (((611630 4647...\n\n## 3) Plot a map with the SMRs\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,0.77,0.83,0.91,1,1.10,1.20,1.30,Inf)\n\ntmap_mode(\"view\")\ntm_shape(carto.NAV) + \n  tm_polygons(col=\"SMR\", id=\"name\", palette=paleta,\n              popup.vars=c(\"ID\",\"obs\",\"exp\",\"SMR\"),\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_layout(main.title=\"Colorectal cancer\", main.title.position=\"center\",\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F)"
  },
  {
    "objectID": "Section1.html#manual-for-installing-the-bigdm-package",
    "href": "Section1.html#manual-for-installing-the-bigdm-package",
    "title": "Section 1: Installing the R package bigDM",
    "section": "",
    "text": "The R package bigDM implements several spatial and spatio-temporal scalable disease mapping models for high-dimensional count data using the integrated nested Laplace approximation (INLA) technique for approximate Bayesian inference in latent Gaussian models (Orozco-Acosta et al., 2021; Orozco-Acosta et al., 2023; and Vicente et al., 2023).\n\n\nBefore installing bigDM, ensure that you have the following prerequisites:\n\nR: Make sure you have R installed on your system. You can download and install it from CRAN.\nRStudio (optional): For a better development experience, you might want to use RStudio, which can be downloaded from RStudio’s official website.\nRtools: R version 4.0 and newer for Windows requires Rtools to build R packages containing C, C++, or Fortran code from source. Installing Rtools for Windows\nR-INLA package: Model fitting and inference is fully Bayesian using the well-known INLA technique through the R-INLA package.\nTo install the latest stable version:\n\ninstall.packages(\"INLA\",repos=c(getOption(\"repos\"),INLA=\"https://inla.r-inla-download.org/R/stable\"), dep=TRUE) \n\nIMPORTANT NOTES:\n\nAt least the stable version of INLA 22.11.22 (or newer) must be installed for the correct use of the bigDM package.\nVisit the R-INLA website for further details about how to install the package on MacOS and for information on version compatibilities.\n\n\n\n\n\n\nInstall from CRAN\n\ninstall.packages(\"bigDM\", dependencies=TRUE) \n\nInstall from GitHub (development version)\n\n# Install devtools package from CRAN repository\ninstall.packages(\"devtools\")\n\n# Load devtools library\nlibrary(devtools)\n\n# In some Linux OS, it might be necessary to first install the following packages\ninstall.packages(c(\"cpp11\",\"proxy\",\"progress\",\"tzdb\",\"vroom\"))\n\n# Install bigDM from GitHub repository\ninstall_github(\"spatialstatisticsupna/bigDM\")\n\n\n\n\n\nLoad the package and check its documentation:\n\nlibrary(bigDM)\npackageVersion(\"bigDM\")\n\n[1] '0.5.4'\n\nhelp(\"bigDM-package\")\n\nRun a test function:\n\nlibrary(sf)\nlibrary(tmap)\nlibrary(RColorBrewer)\n\n## 1) Load simulated colorectal cancer mortality data \ndata(\"Carto_SpainMUN\")\nstr(Carto_SpainMUN)\n\nClasses 'sf' and 'data.frame':  7907 obs. of  9 variables:\n $ ID       : chr  \"01001\" \"01002\" \"01003\" \"01004\" ...\n $ name     : chr  \"Alegria-Dulantzi\" \"Amurrio\" \"Aramaio\" \"Artziniega\" ...\n $ area     : Units: [m^2] num  19913794 96145595 73338806 27506468 10559721 ...\n $ perimeter: Units: [m] num  34372 63352 41430 22605 17847 ...\n $ obs      : int  2 28 6 3 0 2 5 2 3 2 ...\n $ exp      : num  3.024 20.846 3.753 3.209 0.482 ...\n $ SMR      : num  0.661 1.343 1.599 0.935 0 ...\n $ region   : chr  \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" \"Pais Vasco\" ...\n $ geometry :sfc_MULTIPOLYGON of length 7907; first list element: List of 2\n  ..$ :List of 1\n  .. ..$ : num [1:16, 1:2] 538259 537564 537255 537085 536961 ...\n  ..$ :List of 1\n  .. ..$ : num [1:37, 1:2] 541230 540800 540369 540107 540191 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA\n  ..- attr(*, \"names\")= chr [1:8] \"ID\" \"name\" \"area\" \"perimeter\" ...\n\n## 2) Divide the spatial domain into provinces\ncarto.list &lt;- divide_carto(Carto_SpainMUN, ID.group=\"region\")\ncarto.NAV &lt;- carto.list$Navarra\nhead(carto.NAV)\n\nSimple feature collection with 6 features and 8 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 569467 ymin: 4641035 xmax: 650989 ymax: 4757037\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                       name           area     perimeter obs       exp\n1 31001                    Abaigar  5001487 [m^2]  9753.257 [m]   0 0.2774141\n2 31002                       &lt;NA&gt; 23128602 [m^2] 29094.768 [m]   3 1.8362324\n3 31003 Abaurregaina/Abaurrea Alta 21415016 [m^2] 31404.991 [m]   0 0.7061570\n4 31004                       &lt;NA&gt; 11023417 [m^2] 33333.132 [m]   0 0.2080274\n5 31005                     Aberin 21087109 [m^2] 25121.171 [m]   1 0.9738344\n6 31006                    Ablitas 77509242 [m^2] 43699.550 [m]   5 6.7425962\n        SMR  region                       geometry\n1 0.0000000 Navarra MULTIPOLYGON (((572068 4721...\n2 1.6337802 Navarra MULTIPOLYGON (((576006.4 47...\n3 0.0000000 Navarra MULTIPOLYGON (((644264 4747...\n4 0.0000000 Navarra MULTIPOLYGON (((643374 4750...\n5 1.0268687 Navarra MULTIPOLYGON (((578396 4720...\n6 0.7415541 Navarra MULTIPOLYGON (((611630 4647...\n\n## 3) Plot a map with the SMRs\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,0.77,0.83,0.91,1,1.10,1.20,1.30,Inf)\n\ntmap_mode(\"view\")\ntm_shape(carto.NAV) + \n  tm_polygons(col=\"SMR\", id=\"name\", palette=paleta,\n              popup.vars=c(\"ID\",\"obs\",\"exp\",\"SMR\"),\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_layout(main.title=\"Colorectal cancer\", main.title.position=\"center\",\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F)"
  },
  {
    "objectID": "Section3.html",
    "href": "Section3.html",
    "title": "Section 3: M-models for spatial multivariate disease mapping",
    "section": "",
    "text": "In the previous practice, we show how to fit spatial Poisson mixed models for high-dimensional areal data using the R package bigDM. Here, we describe how to use this package to fit order-free multivariate scalable Bayesian models to smooth mortality (or incidence) risks of several diseases simultaneously Vicente et al, (2023)."
  },
  {
    "objectID": "Section3.html#the-mcar_inla-function",
    "href": "Section3.html#the-mcar_inla-function",
    "title": "Section 3: M-models for spatial multivariate disease mapping",
    "section": "The MCAR_INLA() function",
    "text": "The MCAR_INLA() function\nThis function allows fitting (scalable) spatial multivariate Poisson mixed models to areal count data, where dependence between spatial patterns of the diseases is addressed through the use of M-model (Botella-Rocamora et al., 2015).\nSpecifically, the linear predictor is modelled as\n\\[\\begin{equation}\n\\log r_{ij} = \\alpha_j + \\theta_{ij}, \\quad \\mbox{for} \\quad i=1,\\ldots,I; \\quad j=1,\\ldots,J\n\\end{equation}\\]\nwhere \\(\\alpha_j\\) is a disease-specific intercept and \\(\\theta_{ij}\\) is the spatial main effect of area \\(i\\) for the \\(j\\)-th disease.\nWe rearrange the spatial effects into the matrix \\(\\Theta=\\lbrace \\theta_{ij}, i=1, \\ldots, n; \\, j=1, \\ldots, J \\rbrace\\) to better comprehend the dependence structure. The main advantage of the multivariate modelling is that dependence between the spatial patterns of the different diseases can be included in the model, so that latent associations between diseases can help to discover potential risk factors related to the phenomena under study. These unknown connections can be crucial to a better understanding of complex diseases such as cancer.\nThe potential association between the spatial patterns of the different diseases are included in the model considering the decomposition of \\(\\Theta\\) as\n\\[\\begin{equation}\n\\Theta = \\Phi M,\n\\end{equation}\\]\nwhere \\(\\Phi\\) and \\(M\\) deal with dependency within-diseases and between-diseases, respectively. In the following, we briefly describe the two components of the M-model.\nThe matrix \\(\\Phi\\) is a matrix of order \\(n \\times K\\) and it is composed of stochastically independent columns that are distributed following a spatially correlated distribution. Usually, as many spatial distributions as diseases are considered, that is, \\(K=J\\). Several CAR prior distributions can be specified to deal with spatial dependence within-diseases, such as the intrinsic CAR prior, the Leroux CAR prior, and the proper CAR prior distribution.\nOn the other hand, \\(M\\) is a \\(K \\times J\\) nonsingular but arbitrary matrix and it is responsible for inducing dependence between the different columns of \\(\\Theta\\), i.e., for inducing correlation between the spatial patterns of the diseases. Note that, assigning \\(N(0,\\sigma)\\) priors to the cells of \\(M\\) is equivalent to assigning a Wishart prior to \\(M'M\\), i.e., \\(M'M \\sim Wishart(J, \\sigma^{2} \\mathbf{I}_J)\\).\nOnce the between-diseases dependencies are incorporated into the model, the resulting prior distributions for \\(\\mbox{vec} \\left( \\Theta \\right)\\) with Gaussian kernel has a precision matrix given by\n\\[\\begin{equation}\n\\Omega_{\\mbox{vec}(\\Theta)} =\n    \\left(M^{-1} \\otimes I_n \\right) \\:\n    \\mbox{Blockdiag}(\\Omega_{1},\\ldots,\\Omega_{J}) \\:\n    \\left(M^{-1} \\otimes I_n \\right)'.\n\\end{equation}\\]\nRecall that this precision matrix accounts for both within and between-disease dependencies. If \\(\\Omega_{1} = \\ldots = \\Omega_{J}= \\Omega_{w}\\), the covariance structure is separable and can be expressed as \\(\\Omega_{\\mbox{vec}(\\Theta)}^{-1}=\\Omega_{b}^{-1} \\otimes \\Omega_{w}^{-1}\\), where \\(\\Omega_{b}^{-1}=M'M\\) and \\(\\Omega_{w}^{-1}\\) are the between- and within-disease covariance matrices, respectively.\nNotes:\n\nAs for the spatial prior distributions for univariate models (single disease), appropriate sum-to-zero constraints must be imposed to address identifiability issues with the disease-specific intercepts.\nThe M-model implementation of these models using R-INLA requires the use of at least \\(J \\times (J+1)/2\\) hyperparameters. So, the results must be carefully checked, specially when using the Leroux or proper CAR priors.\n\n\nMain input arguments\nWhat follows is a brief description of the main input arguments and functionalities of the MCAR_INLA() function:\n\ncarto: object of class sf or SpatialPolygonsDataFrame. This object must contain at least the variable with the identifiers of the spatial areal units specified in the argument ID.area.\ndata: object of class data.frema that must contain the target variables of interest specified in the arguments ID.area, ID.disease, O and E.\nID.area: character; name of the variable that contains the IDs of spatial areal units.\nID.disease: character; name of the variable that contains the IDs of the diseases.\nID.group: character; name of the variable that contains the IDs of the spatial partition (grouping variable). Only required if model=\"partition\".\nO: character; name of the variable that contains the observed number of cases for each areal unit and disease.\nE: character; name of the variable that contains either the expected number of cases for each areal unit and disease.\nW: optional argument with the binary adjacency matrix of the spatial areal units. If NULL (default), this object is computed from the carto argument (two areas are considered as neighbours if they share a common border).\nprior: one of either \"intrinsic\" (default), \"Leroux\", \"proper\" or \"iid\", which specifies the prior distribution considered for the spatial random effects.\nmodel: one of either \"global\" or \"partition\" (default), which specifies the Global model or one of the scalable model proposal’s (Disjoint model and k-order neighbourhood model, respectively).\nk: numeric value with the neighbourhood order used for the partition model. Usually k=2 or 3 is enough to get good results. If k=0 (default) the Disjoint model is considered. Only required if model=\"partition\".\ncompute.DIC: logical value; if TRUE (default) then approximate values of the Deviance Information Criterion (DIC) and Watanabe-Akaike Information Criterion (WAIC) are computed.\ncompute.fitted.values: logical value (default FALSE); if TRUE transforms the posterior marginal distribution of the linear predictor to the exponential scale (risks or rates).\ninla.mode: one of either \"classic\" (default) or \"compact\", which specifies the approximation method used by INLA. See help(inla) for further details.\n\nFor further details, please refer to the reference manual and the vignettes accompanying this package."
  },
  {
    "objectID": "Section3.html#example-joint-analysis-of-lung-colorectal-and-stomach-cancer-mortality",
    "href": "Section3.html#example-joint-analysis-of-lung-colorectal-and-stomach-cancer-mortality",
    "title": "Section 3: M-models for spatial multivariate disease mapping",
    "section": "Example: joint analysis of lung, colorectal and stomach cancer mortality",
    "text": "Example: joint analysis of lung, colorectal and stomach cancer mortality\nSimulated data for lung, colorectal and stomach cancer mortality in the 7907 municipalities of mainland Spain (excluding Baleareas and Canary Islands, and the autonomous cities of Ceuta and Melilla) included in the Data_MultiCancer object will be used for illustration.\n\nlibrary(bigDM)\nlibrary(INLA)\n\nCargando paquete requerido: Matrix\n\n\nCargando paquete requerido: sp\n\n\nThis is INLA_24.05.10 built 2024-05-10 19:59:04 UTC.\n - See www.r-inla.org/contact-us for how to get help.\n - List available models/likelihoods/etc with inla.list.models()\n - Use inla.doc(&lt;NAME&gt;) to access documentation\n\nlibrary(sf)\n\nLinking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE\n\nlibrary(tmap)\n\nBreaking News: tmap 3.x is retiring. Please test v4, e.g. with\nremotes::install_github('r-tmap/tmap')\n\ndata(Data_MultiCancer)\nstr(Data_MultiCancer)\n\n'data.frame':   23721 obs. of  5 variables:\n $ ID     : chr  \"01001\" \"01002\" \"01003\" \"01004\" ...\n $ disease: int  1 1 1 1 1 1 1 1 1 1 ...\n $ obs    : int  3 41 4 6 0 2 4 10 2 7 ...\n $ exp    : num  6.615 42.634 7.431 6.355 0.934 ...\n $ SMR    : num  0.454 0.962 0.538 0.944 0 ...\n\n\nThe data has a common identification variable (ID) to link it with the Carto_SpainMUN object.\n\ndata(\"Carto_SpainMUN\")\nCarto_SpainMUN$obs &lt;- NULL\nCarto_SpainMUN$exp &lt;- NULL\nCarto_SpainMUN$SMR &lt;- NULL\n\nhead(Carto_SpainMUN)\n\nSimple feature collection with 6 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 485318 ymin: 4727428 xmax: 543317 ymax: 4779153\nProjected CRS: ETRS89 / UTM zone 30N\n     ID                                    name           area    perimeter\n1 01001                        Alegria-Dulantzi 19913794 [m^2] 34372.11 [m]\n2 01002                                 Amurrio 96145595 [m^2] 63352.32 [m]\n3 01003                                 Aramaio 73338806 [m^2] 41430.46 [m]\n4 01004                              Artziniega 27506468 [m^2] 22605.22 [m]\n5 01006                                 Arminon 10559721 [m^2] 17847.35 [m]\n6 01008 Arrazua-Ubarrundia (San Martin de Ania) 57502811 [m^2] 64968.81 [m]\n      region                       geometry\n1 Pais Vasco MULTIPOLYGON (((538259 4737...\n2 Pais Vasco MULTIPOLYGON (((503520 4760...\n3 Pais Vasco MULTIPOLYGON (((533286 4759...\n4 Pais Vasco MULTIPOLYGON (((491260 4776...\n5 Pais Vasco MULTIPOLYGON (((509851 4727...\n6 Pais Vasco MULTIPOLYGON (((534678 4746...\n\n\n\nGlobal model\nThe Global model with an iCAR prior for the spatial random effects is fitted using the MCAR_INLA() function as\n\niCAR.Global &lt;- MCAR_INLA(carto=Carto_SpainMUN, data=Data_MultiCancer,\n                         ID.area=\"ID\", ID.disease=\"disease\", O=\"obs\", E=\"exp\",\n                         model=\"global\", prior=\"intrinsic\", inla.mode=\"compact\")\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting global model with INLA (this may take a while...)\n\nsummary(iCAR.Global)\n\nTime used:\n    Pre = 1.19, Running = 154, Post = 7.16, Total = 162 \nFixed effects:\n     mean    sd 0.025quant 0.5quant 0.975quant   mode kld\nI1 -0.146 0.006     -0.157   -0.146     -0.134 -0.146   0\nI2 -0.053 0.006     -0.066   -0.053     -0.040 -0.053   0\nI3  0.017 0.010     -0.002    0.017      0.037  0.017   0\n\nRandom effects:\n  Name    Model\n    idx RGeneric2\n\nModel hyperparameters:\n                 mean    sd 0.025quant 0.5quant 0.975quant   mode\nTheta1 for idx -1.292 0.032     -1.353   -1.292     -1.226 -1.295\nTheta2 for idx -1.982 0.076     -2.128   -1.984     -1.828 -1.989\nTheta3 for idx -1.361 0.066     -1.493   -1.360     -1.235 -1.355\nTheta4 for idx  0.118 0.010      0.097    0.118      0.138  0.118\nTheta5 for idx  0.102 0.018      0.068    0.101      0.139  0.099\nTheta6 for idx  0.091 0.026      0.041    0.091      0.143  0.090\n\nDeviance Information Criterion (DIC) ...............: 79474.97\nDeviance Information Criterion (DIC, saturated) ....: 25159.97\nEffective number of parameters .....................: 1706.69\n\nWatanabe-Akaike information criterion (WAIC) ...: 79386.15\nEffective number of parameters .................: 1393.25\n\nMarginal log-Likelihood:  -40196.42 \nCPO, PIT is computed \nPosterior summaries for the linear predictor and the fitted values are computed\n(Posterior marginals needs also 'control.compute=list(return.marginals.predictor=TRUE)')\n\n\n\nPosterior estimates of between-disease correlations and variance parameters\nIn addition to enlarge the effective sample size and improving smoothing by borrowing information from the different responses, one of the main advantages of multivariate disease mapping models is that they take into account correlations between the spatial patterns of the different diseases \\({\\rho}=(\\rho_{12},\\rho_{13},\\rho_{23})^{'}\\), that is, they reveal connections between diseases. In addition, it also provides the diagonal elements of the between-disease covariance matrix (\\(\\sigma^2_j\\)), hereafter referred to as variance parameters, which control the amount of smoothing within diseases.\nThe marginal posterior estimates of these parameters are computed by first sampling from the approximated joint posterior distribution of the model hyperparameters using the inla.hyperpar.sample() function. Then, kernel density estimates of the derived samples for the elements of the correlation matrix of the random effects are computed. The results, including summary statistics and posterior marginal densities, are contained in the summary.cor/summary.var and marginals.cor/marginals.var elements of the inla model\n\n## Posterior estimates of between-disease correlations ##\niCAR.Global$summary.cor\n\n           mean         sd 0.025quant  0.5quant 0.975quant\nrho12 0.6472064 0.04689247  0.5510928 0.6485327  0.7343874\nrho13 0.3478726 0.05887410  0.2328174 0.3468068  0.4649567\nrho23 0.4621885 0.06707652  0.3280087 0.4636844  0.5882431\n\n## Posterior estimates of variance parameters ##\niCAR.Global$summary.var\n\n           mean          sd 0.025quant   0.5quant 0.975quant\nvar1 0.07568090 0.005047447 0.06640689 0.07543190 0.08621611\nvar2 0.03312324 0.003746377 0.02646073 0.03286147 0.04111373\nvar3 0.08601209 0.010289900 0.06736018 0.08538790 0.10736449\n\n\n\n\n\nPartition models\nAgain, we propose to divide the data into the \\(D=15\\) Autonomous Regions of Spain (region variable of the Carto_SpainMUN object).\nThe disjoint and k-order neighbourhood models with an iCAR prior distribution are fitted using the MCAR_INLA() function as:\n\nparallel::detectCores()\n\n[1] 4\n\niCAR.k0 &lt;- MCAR_INLA(carto=Carto_SpainMUN, data=Data_MultiCancer,\n                     ID.area=\"ID\", ID.disease=\"disease\", O=\"obs\", E=\"exp\",\n                     model=\"partition\", k=0, ID.group=\"region\",\n                     prior=\"intrinsic\", inla.mode=\"compact\",\n                     plan=\"cluster\", workers=rep(\"localhost\",4))\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=0) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\niCAR.k1 &lt;- MCAR_INLA(carto=Carto_SpainMUN, data=Data_MultiCancer,\n                     ID.area=\"ID\", ID.disease=\"disease\", O=\"obs\", E=\"exp\",\n                     model=\"partition\", k=1, ID.group=\"region\",\n                     prior=\"intrinsic\", inla.mode=\"compact\",\n                     plan=\"cluster\", workers=rep(\"localhost\",4))\n\nSTEP 1: Pre-processing data\nSTEP 2: Fitting partition (k=1) model with INLA \n+ Model 1 of 15 \n+ Model 2 of 15 \n+ Model 3 of 15 \n+ Model 4 of 15 \n+ Model 5 of 15 \n+ Model 6 of 15 \n+ Model 7 of 15 \n+ Model 8 of 15 \n+ Model 9 of 15 \n+ Model 10 of 15 \n+ Model 11 of 15 \n+ Model 12 of 15 \n+ Model 13 of 15 \n+ Model 14 of 15 \n+ Model 15 of 15 \nSTEP 3: Merging the results\n\n\n\n\nCompare the results\n\nlibrary(RColorBrewer)\n\n## Carto object of the Spanish provinces \ncarto.CCAA &lt;- aggregate(Carto_SpainMUN[,\"geometry\"],list(ID.group=st_drop_geometry(Carto_SpainMUN)$region), head)\n\n## Model selection criteria\ncompare.DIC &lt;- function(x){\n  data.frame(mean.deviance=x$dic$mean.deviance, p.eff=x$dic$p.eff,\n             DIC=x$dic$dic, WAIC=x$waic$waic,\n             time=x$cpu.used[\"Total\"])\n}\nMODELS &lt;- list(Global=iCAR.Global, k0=iCAR.k0, k1=iCAR.k1)\ndo.call(rbind,lapply(MODELS, compare.DIC))\n\n       mean.deviance    p.eff      DIC     WAIC     time\nGlobal      77768.28 1706.691 79474.97 79386.15 162.0214\nk0          77528.24 1971.133 79499.38 79369.26 275.4500\nk1          77595.63 1855.007 79450.63 79344.51 332.4700\n\n## Maps with posterior median estimates of log-risks\ncarto &lt;- Carto_SpainMUN\nS &lt;- nrow(carto)\nJ &lt;- length(unique(Data_MultiCancer$disease))\n\nlogRisk.Global &lt;- matrix(iCAR.Global$summary.linear.predictor$`0.5quant`,S,J,byrow=F)\ncarto$Global.disease1 &lt;- logRisk.Global[,1]\ncarto$Global.disease2 &lt;- logRisk.Global[,2]\ncarto$Global.disease3 &lt;- logRisk.Global[,3]\n\nlogRisk.k0 &lt;- matrix(iCAR.k0$summary.linear.predictor$`0.5quant`,S,J,byrow=F)\ncarto$k0.disease1 &lt;- logRisk.k0[,1]\ncarto$k0.disease2 &lt;- logRisk.k0[,2]\ncarto$k0.disease3 &lt;- logRisk.k0[,3]\n\nlogRisk.k1 &lt;- matrix(iCAR.k1$summary.linear.predictor$`0.5quant`,S,J,byrow=F)\ncarto$k1.disease1 &lt;- logRisk.k1[,1]\ncarto$k1.disease2 &lt;- logRisk.k1[,2]\ncarto$k1.disease3 &lt;- logRisk.k1[,3]\n\npaleta &lt;- brewer.pal(8,\"RdYlGn\")[8:1]\nvalues &lt;- c(-Inf,log(c(0.77,0.83,0.91,1,1.10,1.20,1.30)),Inf)\n\ntmap_mode(\"plot\")\nMap.risk &lt;- tm_shape(carto) + \n  tm_polygons(col=c(\"Global.disease1\",\"k0.disease1\",\"k1.disease1\",\n                    \"Global.disease2\",\"k0.disease2\",\"k1.disease2\",\n                    \"Global.disease3\",\"k0.disease3\",\"k1.disease3\"),\n              palette=paleta, border.alpha=0, title=\"log-risks\",\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\") + \n  tm_shape(carto.CCAA) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior median estimates\", main.title.position=\"center\",\n            panel.labels=c(\"Lung cancer (global)\",\"Lung cancer (disjoint)\",\"Lung cancer (1st order)\",\n                           \"Colorectal cancer (global)\",\"Colorectal cancer (disjoint)\",\"Colorectal cancer (1st order)\",\n                           \"Stomach cancer (global)\",\"Stomach cancer (disjoint)\",\"Stomach cancer (1st order)\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=3, ncol=3)\n\nprint(Map.risk)\n\n\n\n## Maps with posterior exceedence probabilities\ncarto &lt;- Carto_SpainMUN\nS &lt;- nrow(carto)\nJ &lt;- length(unique(Data_MultiCancer$disease))\n\nprob.Global &lt;- matrix(1-iCAR.Global$summary.linear.predictor$`0cdf`,S,J,byrow=F)\ncarto$Global.disease1 &lt;- prob.Global[,1]\ncarto$Global.disease2 &lt;- prob.Global[,2]\ncarto$Global.disease3 &lt;- prob.Global[,3]\n\nprob.k0 &lt;- matrix(1-iCAR.k0$summary.linear.predictor$`0cdf`,S,J,byrow=F)\ncarto$k0.disease1 &lt;- prob.k0[,1]\ncarto$k0.disease2 &lt;- prob.k0[,2]\ncarto$k0.disease3 &lt;- prob.k0[,3]\n\nprob.k1 &lt;- matrix(1-iCAR.k1$summary.linear.predictor$`0cdf`,S,J,byrow=F)\ncarto$k1.disease1 &lt;- prob.k1[,1]\ncarto$k1.disease2 &lt;- prob.k1[,2]\ncarto$k1.disease3 &lt;- prob.k1[,3]\n\npaleta &lt;- brewer.pal(6,\"Blues\")[-1]\nvalues &lt;- c(0,0.1,0.2,0.8,0.9,1)\n\ntmap_mode(\"plot\")\nMap.prob &lt;- tm_shape(carto) + \n  tm_polygons(col=c(\"Global.disease1\",\"k0.disease1\",\"k1.disease1\",\n                    \"Global.disease2\",\"k0.disease2\",\"k1.disease2\",\n                    \"Global.disease3\",\"k0.disease3\",\"k1.disease3\"),\n              palette=paleta, border.alpha=0, title=\"Prob\",\n              legend.show=T, legend.reverse=T,\n              style=\"fixed\", breaks=values, interval.closure=\"left\",\n              labels=c(\"[0-0.1)\",\"[0.1-0.2)\",\"[0.2-0.8)\",\"[0.8-0.9)\",\"[0.9-1]\")) +\n  tm_shape(carto.CCAA) + tm_borders(col=\"gray40\") + \n  tm_layout(main.title=\"Posterior exceedence probabilities\", main.title.position=\"center\",\n            panel.labels=c(\"Lung cancer (global)\",\"Lung cancer (disjoint)\",\"Lung cancer (1st order)\",\n                           \"Colorectal cancer (global)\",\"Colorectal cancer (disjoint)\",\"Colorectal cancer (1st order)\",\n                           \"Stomach cancer (global)\",\"Stomach cancer (disjoint)\",\"Stomach cancer (1st order)\"),\n            legend.outside=T, legend.outside.position=\"right\", legend.frame=F,\n            legend.outside.size=0.2, outer.margins=c(0.02,0.01,0.02,0.01)) + \n  tm_facets(nrow=3, ncol=3)\n\nprint(Map.prob)\n\n\n\n\n\n\nCMC estimates of between-disease correlations and variance parameters\nPosterior distributions of the estimated between-disease correlations with the global, and 1st-order neighbourhood models:\n\nrbind(Global=iCAR.Global$summary.cor[\"rho12\",],\n      `k1-CMC`=iCAR.k1$summary.cor[\"rho12\",])\n\n            mean         sd 0.025quant  0.5quant 0.975quant\nGlobal 0.6472064 0.04689247  0.5510928 0.6485327  0.7343874\nk1-CMC 0.6409397 0.04191041  0.5558936 0.6417435  0.7199013\n\nrbind(Global=iCAR.Global$summary.cor[\"rho13\",],\n      `k1-CMC`=iCAR.k1$summary.cor[\"rho13\",])\n\n            mean        sd 0.025quant  0.5quant 0.975quant\nGlobal 0.3478726 0.0588741  0.2328174 0.3468068  0.4649567\nk1-CMC 0.4204904 0.0506110  0.3170803 0.4213092  0.5167947\n\nrbind(Global=iCAR.Global$summary.cor[\"rho23\",],\n      `k1-CMC`=iCAR.k1$summary.cor[\"rho23\",])\n\n            mean         sd 0.025quant  0.5quant 0.975quant\nGlobal 0.4621885 0.06707652  0.3280087 0.4636844  0.5882431\nk1-CMC 0.4100700 0.06101213  0.2868264 0.4113751  0.5252188\n\n\n\n\n\n\n\nMaps of posterior medians of between-disease correlations and standard deviation (in brackets) for the different subdivisions obtained with the 1st-order neighbourhood partition model. Correlations between lung and colorectal cancer are displayed on the left (\\(rho_1,2\\)), the central map displays the correlations between lung and stomach cancer (\\(rho_1,3\\)) and the map on the right displays the correlation between colorectal and stomach cancer (\\(rho_2,3\\)).\n\n\nWarning: Values have found that are less than the lowest break\nWarning: Values have found that are less than the lowest break\nWarning: Values have found that are less than the lowest break"
  }
]